#minor library math functions description
mvec2add - Adds two 2D vectors.
mvec2sub - Subtracts two 2D vectors.
mvec2ccw - Returns the z-component by taking the cross product of two 2D vectors.
mvec2dot - Determines the dot product of two 2D vectors.
mvec2reflect - Returns reflected 2D vector to a normal.
mvec2refract - Compute the direction of a refracted 2D vector.
mvec2lerp - Performs a linear interpolation between two 2D vectors.
mvec2len - Returns the length of a 2D vector.
mvec2len2 - Returns the square of the length of a 2D vector.
mvec2dist - Returns the distance between two 2D vectors.
mvec2dist2 - Returns the square of the distance of a two 2D vectors.
mvec2norm - Returns the normalized version of a 2D vector.
mvec2set - Set components of a 2D vector.
mvec2scale - Scales a 2D vector.
mvec2max - Returns a 2D vector that is made up of the largest components of two 2D vectors.
mvec2min - Returns a 2D vector that is made up of the smallest components of two 2D vectors.
mvec2hermite - Performs a Hermite spline interpolation, using the specified 2D vectors.
mvec2catmull - Performs a Catmull-Rom interpolation, using the specified 2D vectors.
mvec2bary - Returns a point in Barycentric coordinates, using the specified 2D vectors.
mvec2rot - Performs a 2D vector rotation by a given angle.
mvec2transf - Transforms a 2D vector by a given 4x4 matrix. Returns 4D vector.
mvec2transf2 - Transforms a 2D vector by a given 3x3 matrix. Returns 2D vector.
mvec2inv - Returns the inverted 2D vector.
mvec2neg - Negate the direction of a 2D vector.
mvec2eq - Check whether two given 2D vectors are almost equal.
mvec2quad - Performs a quadratic interpolation, using the specified 2D vectors.
mvec2cubic - Performs a cubic interpolation, using the specified 2D vectors.
mvec2sqrp - Performs a square interpolation, using the specified 2D vectors.
mvec2cosp - Performs a cosine interpolation, using the specified 2D vectors.

mvec3add - Adds two 3D vectors.
mvec3sub - Subtracts two 3D vectors.
mvec3cross - Determines the cross-product of two 3D vectors.
mvec3dot - Determines the dot product of two 3D vectors.
mvec3reflect - Returns reflected 3D vector to a normal.
mvec3refract - Compute the direction of a refracted 3D vector.
mvec3lerp - Performs a linear interpolation between two 3D vectors.
mvec3len - Returns the length of a 3D vector.
mvec3len2 - Returns the square of the length of a 3D vector.
mvec3dist - Returns the distance between two 3D vectors.
mvec3dist2 - Returns the square of the distance of a two 3D vectors.
mvec3norm - Returns the normalized version of a 3D vector.
mvec3scale - Scales a 3D vector.
mvec3set - Set components of a 3D vector.
mvec3max - Returns a 3D vector that is made up of the largest components of two 3D vectors.
mvec3min - Returns a 3D vector that is made up of the smallest components of two 3D vectors.
mvec3hermite - Performs a Hermite spline interpolation, using the specified 3D vectors.
mvec3catmull - Performs a Catmull-Rom interpolation, using the specified 3D vectors.
mvec3bary - Returns a point in Barycentric coordinates, using the specified 3D vectors.
mvec3transf - Transforms a 3D vector by a given 4x4 matrix. Returns 4D vector.
mvec3transf3 - Transforms a 3D vector by a given 4x4 matrix. Returns 3D vector.
mvec3proj - Projects a 3D vector from object space into screen space.
mvec3unproj - Projects a 3D vector from screen space into object space.
mvec3inv - Returns the inverted 3D vector.
mvec3neg - Negate the direction of a 3D vector.
mvec3eq - Check whether two given 3D vectors are almost equal.
mvec3quad - Performs a quadratic interpolation, using the specified 3D vectors.
mvec3cubic - Performs a cubic interpolation, using the specified 3D vectors.
mvec3sqrp - Performs a square interpolation, using the specified 3D vectors.
mvec3cosp - Performs a cosine interpolation, using the specified 3D vectors.

mvec4add - Adds two 4D vectors.
mvec4sub - Subtracts two 4D vectors.
mvec4cross - Determines the cross-product of two 4D vectors.
mvec4dot - Determines the dot product of two 4D vectors.
mvec4reflect - Returns reflected 4D vector to a normal.
mvec4refract - Compute the direction of a refracted 4D vector.
mvec4lerp - Performs a linear interpolation between two 4D vectors.
mvec4len - Returns the length of a 4D vector.
mvec4len2 - Returns the square of the length of a 4D vector.
mvec4dist - Returns the distance between two 4D vectors.
mvec4dist2 - Returns the square of the distance of a two 4D vectors.
mvec4norm - Returns the normalized version of a 4D vector.
mvec4set - Set components of a 4D vector.
mvec4scale - Scales a 4D vector.
mvec4max - Returns a 4D vector that is made up of the largest components of two 4D vectors.
mvec4min - Returns a 4D vector that is made up of the smallest components of two 4D vectors.
mvec4hermite - Performs a Hermite spline interpolation, using the specified 4D vectors.
mvec4carmull - Performs a Catmull-Rom interpolation, using the specified 4D vectors.
mvec4bary - Returns a point in Barycentric coordinates, using the specified 4D vectors.
mvec4transf - Transforms a 4D vector by a given 4x4 matrix.
mvec4inv - Returns the inverted 4D vector.
mvec4neg - Negate the direction of a 4D vector.
mvec4eq - Check whether two given 4D vectors are almost equal.
mvec4quad - Performs a quadratic interpolation, using the specified 4D vectors.
mvec4cubic - Performs a cubic interpolation, using the specified 4D vectors.
mvec4sqrp - Performs a square interpolation, using the specified 4D vectors.
mvec4cosp - Performs a cosine interpolation, using the specified 4D vectors.

mmtx33affine - Builds a 3D affine transformation matrix. NULL arguments are treated as identity transformations.
mmtx33mult - Determines the product of two matrices.
mmtx33det - Returns the determinant of a matrix.
mmtx33trace - Return the trace of the 3x3 matrix (sum of the values along the diagonal).
mmtx33set - Set matrix components.
mmtx33lerp - Performs a linear interpolation between two matrices.
mmtx33copy - Copy matrix.
mmtx33ident - Creates an identity matrix.
mmtx33isident - Determines if a matrix is an identity matrix.
mmtx33decomp - Breaks down a general transformation matrix into its scalar, rotational, and translational components.
mmtx33inv - Calculates the inverse of a matrix.
mmtx33scale - Builds a matrix that scales along the x-axis and the y-axis.
mmtx33rot - Builds a rotation matrix.
mmtx33transp - Returns the matrix transpose of a matrix.
mmtx33transl - Builds a matrix using the specified offsets.
mmtx33reflect - Builds a matrix that reflects the coordinate system about a plane. //?


mmtx44affine - Builds a 3D affine transformation matrix. NULL arguments are treated as identity transformations.
mmtx44mult - Determines the product of two matrices.
mmtx44lerp - Performs a linear interpolation between two matrices.
mmtx44det - Returns the determinant of a matrix.
mmtx44trace - Return the trace of the 4x4 matrix (sum of the values along the diagonal).
mmtx44ident - Creates an identity matrix.
mmtx44isident - Determines if a matrix is an identity matrix.
mmtx44set - Set matrix components.
mmtx44copy - Copy matrix.
mmtx44inv - Calculates the inverse of a matrix.
mmtx44invaffine - Calculates the inverse affine of a matrix.
mmtx44decomp - Breaks down a general 3D transformation matrix into its scalar, rotational, and translational components.
mmtx44scale - Builds a matrix that scales along the x-axis, the y-axis and the z-axis.
mmtx44rotx - Builds a matrix that rotates around the x-axis.
mmtx44roty - Builds a matrix that rotates around the y-axis.
mmtx44rotz - Builds a matrix that rotates around the z-axis.
mmtx44transp - Returns the matrix transpose of a matrix.
mmtx44transl - Builds a matrix using the specified offsets.
mmtx44reflect - Builds a matrix that reflects the coordinate system about a plane.
mmtx44shadow - Builds a matrix that flattens geometry into a plane.
mmtx44persp - Builds a (left-handed) perspective projection matrix.
mmtx44perspfov - Builds a (left-handed) perspective projection matrix based on a field of view.
mmtx44ortho - Builds a left-handed orthographic projection matrix.
mmtx44lookat - Builds a left-handed, look-at matrix.
mmtx44frustum - Builds a (left-handed) perspective projection matrix.
mmtx44quat - Builds a quaternion from rotation matrix.


mquatadd - Adds two 4D vectors.
mquatsub - Subtracts two 3D vectors.
mquatdot - Returns the dot product of two quaternions.
mquatset - Set quaternion conponents.
mquatcopy - Copy quaternion.
mquatident - Returns the identity quaternion.
mquatisident - Determines if a quaternion is an identity quaternion.
mquateq - Check whether two given 4D vectors are almost equal.
mquatconj - Returns the conjugate of a quaternion.
mquatlen - Returns the length of a quaternion.
mquatlen2 - Returns the square of the length of a quaternion.
mquatnorm - Computes a unit length quaternion.
mquatmult - Multiplies two quaternions.
mquatscale - Scale quaternion by value.
mquatinv - Returns the inverted quaternion.
mquatbary - Returns a quaternion in barycentric coordinates.
mquatlerp - Performs a linear interpolation between two quaternions.
mquatslerp - Interpolates between two quaternions, using spherical linear interpolation.
mquatnlerp - Interpolates between two quaternions, using optimized spherical linear interpolation.
mquatsquad - Interpolates between quaternions, using spherical quadrangle interpolation.
mquatspline - Sets up control points for spherical quadrangle interpolation.
mquatln - Calculates the natural logarithm.
mquatexp - Calculates the exponential.
mquatmtx44 - Builds a rotation matrix from a quaternion.
mquatangle - Returns rotatation angle of a quaternion.
mquataxis - Returns axis specified by vector part of a quaternion.
mquatrot - Rotates a quaternion using another quaternion.
mquatrotvec3 - Rotates 3D Vector Using Quaternion (v, q, v)
mquatrotarc - Create Quaternion For Rotating From Vector V1 To Vector V2
mquatrotaxis - Builds a quaternion from axis and rotation angle. (q, v, angle)
mquateuler - Builds a quaternion with the given Euler angles like yaw, pitch, and roll.


mplaneset -
mplanecopy -
mplanedot -
mplanepts -
mplanenorm -
mplanescale -
mplaneinter -
